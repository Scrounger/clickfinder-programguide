#Region "Copyright (C) 2005-2011 Team MediaPortal"

' Copyright (C) 2005-2011 Team MediaPortal
' http://www.team-mediaportal.com
' 
' MediaPortal is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 2 of the License, or
' (at your option) any later version.
' 
' MediaPortal is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
' GNU General Public License for more details.
' 
' You should have received a copy of the GNU General Public License
' along with MediaPortal. If not, see <http://www.gnu.org/licenses/>.

#End Region

Imports System
Imports System.Collections.Generic
Imports Gentle.Framework
Imports TvDatabase

Namespace TvDatabase
    ''' <summary>
    ''' Instances of this class represent the properties and methods of a row in the table <b>ClickfinderCategories</b>.
    ''' </summary>
    <TableName("ClickfinderCategories")> _
    Public Class ClickfinderCategories
        Inherits Persistent
#Region "Members"

        Private m_isChanged As Boolean

        <TableColumn("idClickfinderCategories", NotNull:=True), PrimaryKey(AutoGenerated:=True)> _
        Private m_idClickfinderCategories As Integer

        <TableColumn("Name", NotNull:=True)> _
        Private m_Name As String

        <TableColumn("Beschreibung", NotNull:=True)> _
        Private m_Beschreibung As String

        <TableColumn("isVisible", NotNull:=True)> _
        Private m_isVisible As Boolean

        <TableColumn("Image", NotNull:=True)> _
        Private m_Image As String

        <TableColumn("SqlString", NotNull:=True)> _
        Private m_SqlString As String

        <TableColumn("SortOrder", NotNull:=True)> _
        Private m_SortOrder As Integer

        <TableColumn("MinRunTime", NotNull:=True)> _
        Private m_MinRunTime As Integer

        <TableColumn("NowOffset", NotNull:=True)> _
        Private m_NowOffset As Integer

        <TableColumn("sortedBy", NotNull:=True)> _
        Private m_sortedBy As String

        <TableColumn("groupName", NotNull:=True)> _
        Private m_groupName As String

#End Region

#Region "Constructors"

        ''' <summary> 
        ''' Create an object from an existing row of data. This will be used by Gentle to 
        ''' construct objects from retrieved rows. 
        ''' </summary> 
        Public Sub New(ByVal Name As String)
            Me.m_Name = Name
        End Sub

        Public Sub New(ByVal Name As String, ByVal Beschreibung As String, ByVal isVisible As Boolean, ByVal SortOrder As Integer, ByVal MinRunTime As Integer, ByVal NowOffset As Integer, Optional ByVal sortedBy As String = "startTime", Optional ByVal groupName As String = "All Channels")
            Me.m_Name = Name
            Me.m_Beschreibung = Beschreibung
            Me.m_isVisible = isVisible
            Me.m_SortOrder = SortOrder
            Me.m_MinRunTime = MinRunTime
            Me.m_NowOffset = NowOffset
            Me.m_sortedBy = sortedBy
            Me.m_groupName = groupName
        End Sub

#End Region

#Region "Public Properties"

        ''' <summary>
        ''' Indicates whether the entity is changed and requires saving or not.
        ''' </summary>
        Public ReadOnly Property IsChanged() As Boolean
            Get
                Return m_isChanged
            End Get
        End Property

        ''' <summary>
        ''' Property relating to database column idClickfinderCategories
        ''' </summary>
        Public Property idClickfinderCategories() As Integer
            Get
                Return m_idClickfinderCategories
            End Get
            Set(ByVal value As Integer)
                m_isChanged = m_isChanged Or m_idClickfinderCategories <> value
                m_idClickfinderCategories = value
            End Set
        End Property


        Public Property Name() As String
            Get
                Return m_Name
            End Get
            Set(ByVal value As String)
                m_isChanged = m_isChanged Or m_Name <> value
                m_Name = value
            End Set
        End Property

        Public Property Beschreibung() As String
            Get
                Return m_Beschreibung
            End Get
            Set(ByVal value As String)
                m_isChanged = m_isChanged Or m_Beschreibung <> value
                m_Beschreibung = value
            End Set
        End Property

        Public Property isVisible() As Boolean
            Get
                Return m_isVisible
            End Get
            Set(ByVal value As Boolean)
                m_isChanged = m_isChanged Or m_isVisible <> value
                m_isVisible = value
            End Set
        End Property
        Public Property Image() As String
            Get
                Return m_Image
            End Get
            Set(ByVal value As String)
                m_isChanged = m_isChanged Or m_Image <> value
                m_Image = value
            End Set
        End Property
        Public Property SqlString() As String
            Get
                Return m_SqlString
            End Get
            Set(ByVal value As String)
                m_isChanged = m_isChanged Or m_SqlString <> value
                m_SqlString = value
            End Set
        End Property

        Public Property SortOrder() As Integer
            Get
                Return m_SortOrder
            End Get
            Set(ByVal value As Integer)
                m_isChanged = m_isChanged Or m_SortOrder <> value
                m_SortOrder = value
            End Set
        End Property
        Public Property MinRunTime() As Integer
            Get
                Return m_MinRunTime
            End Get
            Set(ByVal value As Integer)
                m_isChanged = m_isChanged Or m_MinRunTime <> value
                m_MinRunTime = value
            End Set
        End Property

        Public Property NowOffset() As Integer
            Get
                Return m_NowOffset
            End Get
            Set(ByVal value As Integer)
                m_isChanged = m_isChanged Or m_NowOffset <> value
                m_NowOffset = value
            End Set
        End Property

        Public Property sortedBy() As String
            Get
                Return m_sortedBy
            End Get
            Set(ByVal value As String)
                m_isChanged = m_isChanged Or m_sortedBy <> value
                m_sortedBy = value
            End Set
        End Property
        Public Property groupName() As String
            Get
                Return m_groupName
            End Get
            Set(ByVal value As String)
                m_isChanged = m_isChanged Or m_groupName <> value
                m_groupName = value
            End Set
        End Property
#End Region

#Region "Storage and Retrieval"

        ''' <summary>
        ''' Static method to retrieve all instances that are stored in the database in one call
        ''' </summary>
        Public Shared Function ListAll() As IList(Of ClickfinderCategories)
            Return Gentle.Framework.Broker.RetrieveList(Of ClickfinderCategories)()
        End Function

        ''' <summary>
        ''' Retrieves an entity given it's id.
        ''' </summary>
        Public Overloads Shared Function Retrieve(ByVal SortOrder As Integer) As ClickfinderCategories
            Dim key As New Key(GetType(ClickfinderCategories), True, "sortOrder", SortOrder)
            Return Gentle.Framework.Broker.RetrieveInstance(Of ClickfinderCategories)(key)
        End Function




        ''' <summary>
        ''' Retrieves an entity given it's id, using Gentle.Framework.Key class.
        ''' This allows retrieval based on multi-column keys.
        ''' </summary>
        Public Overloads Shared Function Retrieve(ByVal key As Key) As ClickfinderCategories
            Return Gentle.Framework.Broker.RetrieveInstance(Of ClickfinderCategories)(key)
        End Function

        ''' <summary>
        ''' Persists the entity if it was never persisted or was changed.
        ''' </summary>
        Public Overrides Sub Persist()
            If IsChanged OrElse Not IsPersisted Then
                Try
                    MyBase.Persist()
                Catch ex As Exception
                    MyLog.[Error]("Exception in ClickfinderCategories.Persist() with Message {0}", ex.Message)
                    Return
                End Try
                m_isChanged = False
            End If
        End Sub

#End Region

#Region "Relations"

        ''' <summary>
        '''
        ''' </summary>
        <CLSCompliant(False)> _
        Public Function Referencedgroup() As ChannelGroup
            Dim key As New Key(GetType(ChannelGroup), True, "groupName", groupName)
            Return Gentle.Framework.Broker.RetrieveInstance(Of ChannelGroup)(key)
        End Function

#End Region

        Public Sub Delete()
            Dim list As IList(Of ClickfinderCategories) = ListAll()
            For Each map As ClickfinderCategories In list
                map.Remove()
            Next
            'Remove()
        End Sub
    End Class
End Namespace
